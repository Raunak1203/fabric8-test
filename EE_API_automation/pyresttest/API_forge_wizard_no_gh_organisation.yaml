---
-   config:
    -   testset:    "Forge import flow wizard when logged in with an OSiO user without github organisation"
    -   variable_binds: {
          'headername': 'Content-Type',
          'headervalue':  'application/json'
          }

################################################################################################################
# Prerequisites
################################################################################################################
# pyresttest https://api.openshift.io get_a_space.yaml --vars="{'token':'KEYCLOAK_JWT_TOKEN', 'userid':'ckrych@redhat.com', fixedspacename: 'WIZARD'}" --interactive true

################################################################################################################
# TEST Import repository step1
################################################################################################################

################################################################################################################
# Step 1: init 
################################################################################################################

# 1.1 - init
-   test:
    -   name:   "Import repository wizard step1 - select a gh organisation"
    -   url:    {'template':  "/forge/commands/fabric8-import-git"}
    -   method: "GET"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header: "content-type", comparator: "contains",   expected:   "application/json"}
        -   compare:    {jmespath: "metadata.name", comparator: "eq",   expected:  "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "state.valid", comparator: "eq",   expected:   false} #see issue xxx
        -   compare:    {jmespath: "state.canMoveToNextStep", comparator: "eq",   expected:   false}
        -   compare:    {jmespath: "state.canMoveToPreviousStep", comparator: "eq",   expected:   false}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "inputs[0].class", comparator: "eq",   expected:  "UISelectMany"}
    -   extract_binds:
        -   'selected_github_repo_1': {'jsonpath_mini': 'inputs.0.valueChoices.0.id'}
        -   'selected_github_repo_2': {'jsonpath_mini': 'inputs.0.valueChoices.1.id'}

################################################################################################################
# Step 2: select one or several github repositories to import
################################################################################################################

# 2.1 - validate 
-   test:
    -   name:   "Import repository wizard step2.1 validate - select one or several github repositories to import "
    -   url:    {'template':  "/forge/commands/fabric8-import-git/validate"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {'template':{'file':'./import_wizard_no_gh_organisation/step_2_1_input.json'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: "contains",   expected:   "application/json"}
        -   compare:    {jmespath: "state.valid", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.canMoveToNextStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.canMoveToPreviousStep", comparator: "eq",   expected:   false}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.github.GitHubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "Obsidian: Configure Pipeline"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"}
        -   compare:    {jmespath: "messages", comparator: "type",   expected:  array}
        -   compare:    {jmespath: "messages", comparator: "count_eq",   expected:  0}

# 2.2 - next
-   test:
    -   name:   "Import repository wizard step2.2 next - select one or several github repositories to import"
    -   url:    {'template':  "/forge/commands/fabric8-import-git/next"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {'template':{'file':'./import_wizard_no_gh_organisation/step_2_2_input.json'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header: "content-type", comparator: "contains",   expected:   "application/json"}
        -   compare:    {jmespath: "metadata.name", comparator: "eq",   expected:  "Obsidian: Configure Pipeline"}
        -   compare:    {jmespath: "state.valid", comparator: "eq",   expected:   true} 
        -   compare:    {jmespath: "state.canMoveToNextStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.canMoveToPreviousStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.github.GitHubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "Obsidian: Configure Pipeline"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"}
        -   compare:    {jmespath: "inputs[0].class", comparator: "eq",   expected:  "UISelectOne"}
        -   compare:    {jmespath: "inputs[0].inputType", comparator: "eq",   expected:  "org.jboss.forge.inputType.DEFAULT"}
        -   compare:    {jmespath: "inputs[0].valueType", comparator: "eq",   expected:  "io.fabric8.forge.generator.pipeline.PipelineDTO"}
        -   compare:    {jmespath: "inputs[0].enabled", comparator: "eq",   expected:  true}
        -   compare:    {jmespath: "inputs[0].required", comparator: "eq",   expected:  false} 
        -   compare:    {jmespath: "inputs[0].name", comparator: "eq",   expected:  "pipeline"}
        -   compare:    {jmespath: "inputs[1].class", comparator: "eq",   expected:  "UISelectOne"}
        -   compare:    {jmespath: "inputs[1].inputType", comparator: "eq",   expected:  "org.jboss.forge.inputType.DEFAULT"}
        -   compare:    {jmespath: "inputs[1].valueType", comparator: "eq",   expected:  "java.lang.String"}
        -   compare:    {jmespath: "inputs[1].enabled", comparator: "eq",   expected:  true}
        -   compare:    {jmespath: "inputs[1].required", comparator: "eq",   expected:  true} 
        -   compare:    {jmespath: "inputs[1].name", comparator: "eq",   expected:  "kubernetesSpace"}    
        -   compare:    {jmespath: "inputs[2].class", comparator: "eq",   expected:  "UIInput"}
        -   compare:    {jmespath: "inputs[2].inputType", comparator: "eq",   expected:  "org.jboss.forge.inputType.DEFAULT"}
        -   compare:    {jmespath: "inputs[2].valueType", comparator: "eq",   expected:  "java.lang.String"}
        -   compare:    {jmespath: "inputs[2].enabled", comparator: "eq",   expected:  true}
        -   compare:    {jmespath: "inputs[2].required", comparator: "eq",   expected:  false} 
        -   compare:    {jmespath: "inputs[2].name", comparator: "eq",   expected:  "labelSpace"}        
    -   extract_binds:
        -   'k8_space': {'jsonpath_mini': 'inputs.1.value'}             

################################################################################################################
# Step 3: select pipeline process (Release | Releaseand stage | Release, Stage, Approve and Promote, Aprove)
################################################################################################################

# 3.1 - validate 
-   test:
    -   name:   "Import repository wizard step3.1 validate -  select pipeline"
    -   url:    {'template':  "/forge/commands/fabric8-import-git/validate"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {'template':{'file':'./import_wizard_no_gh_organisation/step_3_1_input.json'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: "contains",   expected:   "application/json"}
        -   compare:    {jmespath: "state.valid", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.canMoveToNextStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.canMoveToPreviousStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.github.GitHubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "Obsidian: Configure Pipeline"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"}
        -   compare:    {jmespath: "messages", comparator: "type",   expected:  array}
        -   compare:    {jmespath: "messages", comparator: "count_eq",   expected:  0}

# 3.2 - next
-   test:
    -   name:   "Import repository wizard step3.2 next -  select pipeline"
    -   url:    {'template':  "/forge/commands/fabric8-import-git/next"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {'template':{'file':'./import_wizard_no_gh_organisation/step_3_2_input.json'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header: "content-type", comparator: "contains",   expected:   "application/json"}
        -   compare:    {jmespath: "metadata.name", comparator: "eq",   expected:  "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"}
        -   compare:    {jmespath: "state.valid", comparator: "eq",   expected:   true} 
        -   compare:    {jmespath: "state.canMoveToNextStep", comparator: "eq",   expected:   false}
        -   compare:    {jmespath: "state.canMoveToPreviousStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.github.GitHubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "Obsidian: Configure Pipeline"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"}
        -   compare:    {jmespath: "inputs[0].class", comparator: "eq",   expected:  "UISelectOne"}
        -   compare:    {jmespath: "inputs[0].inputType", comparator: "eq",   expected:  "org.jboss.forge.inputType.DEFAULT"}
        -   compare:    {jmespath: "inputs[0].valueType", comparator: "eq",   expected:  "java.lang.String"}
        -   compare:    {jmespath: "inputs[0].enabled", comparator: "eq",   expected:  true}
        -   compare:    {jmespath: "inputs[0].required", comparator: "eq",   expected:  true} 
        -   compare:    {jmespath: "inputs[0].name", comparator: "eq",   expected:  "jenkinsSpace"}
        -   compare:    {jmespath: "inputs[1].class", comparator: "eq",   expected:  "UIInput"}
        -   compare:    {jmespath: "inputs[1].inputType", comparator: "eq",   expected:  "org.jboss.forge.inputType.DEFAULT"}
        -   compare:    {jmespath: "inputs[1].valueType", comparator: "eq",   expected:  "java.lang.Boolean"}
        -   compare:    {jmespath: "inputs[1].enabled", comparator: "eq",   expected:  true}
        -   compare:    {jmespath: "inputs[1].required", comparator: "eq",   expected:  false} 
        -   compare:    {jmespath: "inputs[1].name", comparator: "eq",   expected:  "triggerBuild"}  
        -   compare:    {jmespath: "inputs[1].value", comparator: "eq",   expected:  true}   
        -   compare:    {jmespath: "inputs[2].class", comparator: "eq",   expected:  "UIInput"}
        -   compare:    {jmespath: "inputs[2].inputType", comparator: "eq",   expected:  "org.jboss.forge.inputType.DEFAULT"}
        -   compare:    {jmespath: "inputs[2].valueType", comparator: "eq",   expected:  "java.lang.Boolean"}
        -   compare:    {jmespath: "inputs[2].enabled", comparator: "eq",   expected:  true}
        -   compare:    {jmespath: "inputs[2].required", comparator: "eq",   expected:  false} 
        -   compare:    {jmespath: "inputs[2].name", comparator: "eq",   expected:  "addCIWebHooks"}   
        -   compare:    {jmespath: "inputs[2].value", comparator: "eq",   expected:  true} 

################################################################################################################
# Step 4: select jenkins and github hook
################################################################################################################

# 4.1 - validate 
-   test:
    -   name:   "Import repository wizard step4.1 validate -  select jenkins and github hook"
    -   url:    {'template':  "/forge/commands/fabric8-import-git/validate"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {'template':{'file':'./import_wizard_no_gh_organisation/step_4_1_input.json'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: "contains",   expected:   "application/json"}
        -   compare:    {jmespath: "state.valid", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.canMoveToNextStep", comparator: "eq",   expected:   false} # bc final step
        -   compare:    {jmespath: "state.canMoveToPreviousStep", comparator: "eq",   expected:   true}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.github.GitHubImportPickRepositoriesStep"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "Obsidian: Configure Pipeline"}
        -   compare:    {jmespath: "state.steps", comparator: "contains",   expected:   "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"}
        -   compare:    {jmespath: "messages", comparator: "type",   expected:  array}
        -   compare:    {jmespath: "messages", comparator: "count_eq",   expected:  0}

# 4.2 - execute
-   test:
    -   name:   "Import repository wizard step4.2 finshi -  select jenkins and github hook"
    -   url:    {'template':  "/forge/commands/fabric8-import-git/next"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {'template':{'file':'./import_wizard_no_gh_organisation/step_4_2_input.json'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header: "content-type", comparator: "contains",   expected:   "application/json"}
        # -   compare:    {jsonpath_mini: "0.state.valid",  test: "not_exists"}
        # -   compare:    {jmespath: "data[4].warnings", comparator: "type",   expected:  array}
        # -   compare:    {jmespath: "data[4].warnings", comparator: "count_eq",   expected:  0}

 